[tool.poetry]
name = "app"
version = "0.1.0"
description = "sample aws lambda fastapi temaple"
authors = ["your_name"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.95.1"
mangum = "^0.17.0"
httpx = "^0.24.0"
sentry-sdk = "^1.22.1"
aws-lambda-powertools = "^2.15.0"
jmespath = "^1.0.1"
injector = "^0.20.1"
pyyaml = "^6.0"


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
pytest = "^7.3.1"
uvicorn = "^0.21.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
mypy = "^1.2.0"
ruff = "^0.0.265"

[tool.ruff]
# Same as Black.
select = ["ALL"]
ignore = [
    "G004", # `logging-f-string`
    "PLC1901", # compare-to-empty-string
    "PLR2004", # magic-value-comparison
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls
    "ANN002", # missing-type-args
    "ANN003", # missing-type-kwargs
    "ANN401", # any-type
    "ERA", # commented-out-code
    "ARG002", # unused-method-argument
    "INP001", # implicit-namespace-package
    "PGH004", # blanket-noqa
    "B008", # Dependsで使用するため
    "A002", # builtin-argument-shadowing
    "A003", # builtin-attribute-shadowing
    "PLR0913", # too-many-arguments
    "RSE", # flake8-raise
    "D", # pydocstyle
    "C90", # mccabe
    "T20", # flake8-print
    "SLF", #  flake8-self
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "TRY", # tryceratops
    "COM", # flake8-commas
    "S", # flake8-bandit
    "EM",#flake8-errmsg
    "EXE", # flake8-executable
    "ICN", # flake8-import-conventions
    "RET",#flake8-return
    "SIM",#flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", #pathlibを使わないコードが多いので、除外する
    "ISC", #flake8-implicit-str-concat
    "N", # pep8-naming
    "PT", # flake8-pytest-style
    "PGH003"
]

line-length = 115

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py39"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
